#!/bin/bash

###########################
####### LOAD CONFIG #######
###########################

while [ $# -gt 0 ]; do
        case $1 in
                -c)
                        if [ -r "$2" ]; then
                                source "$2"
                                shift 2
                        else
                                ${ECHO} "Unreadable config file \"$2\"" 1>&2
                                exit 1
                        fi
                        ;;
                *)
                        ${ECHO} "Unknown Option \"$1\"" 1>&2
                        exit 2
                        ;;
        esac
done

if [ $# = 0 ]; then
        SCRIPTPATH=$(cd ${0%/*} && pwd -P)
        source $SCRIPTPATH/pg_backup.config
fi;

###########################
#### PRE-BACKUP CHECKS ####
###########################

# Make sure we're running as the required backup user
if [ "$BACKUP_USER" != "" -a "$(id -un)" != "$BACKUP_USER" ]; then
	echo "This script must be run as $BACKUP_USER. Exiting." 1>&2
	exit 1;
fi;


###########################
### INITIALISE DEFAULTS ###
###########################

if [ ! $HOSTNAME ]; then
        HOSTNAME="$(hostname)"
fi;

###########################
#### START THE BACKUPS ####
###########################

BACKUP_TIMESTAMP="$(date +\%Y-\%m-\%d)"
FINAL_BACKUP_DIR=$BACKUP_DIR"$BACKUP_TIMESTAMP/"

echo "Making backup directory in $FINAL_BACKUP_DIR"

if ! mkdir -p $FINAL_BACKUP_DIR; then
	echo "Cannot create backup directory in $FINAL_BACKUP_DIR. Go and fix it!" 1>&2
	exit 1;
fi;

###########################
###### FULL BACKUPS #######
###########################

FULL_BACKUP_QUERY="select datname from pg_database where not datistemplate and datallowconn order by datname;"

echo -e "\n\nPerforming full backups"
echo -e "--------------------------------------------\n"

for DATABASE in `psql -At -c "$FULL_BACKUP_QUERY" postgres`
do
        echo "Backup of $DATABASE"

        if ! pg_dump -Fp "$DATABASE" | gzip > $FINAL_BACKUP_DIR"$DATABASE".sql.gz.in_progress; then
                echo "[!!ERROR!!] Failed to produce plain backup database $DATABASE" 1>&2
        else
                mv $FINAL_BACKUP_DIR"$DATABASE".sql.gz.in_progress $FINAL_BACKUP_DIR"$DATABASE".sql.gz
                s3cmd put \
                  --no-progress \
                  --server-side-encryption \
                  --acl-private \
                  --no-preserve \
                  -c $BACKUP_CONFIG_DIR/s3cfg \
                  $FINAL_BACKUP_DIR"$DATABASE".sql.gz \
                  s3://$BACKUP_BUCKET/$BACKUP_PREFIX/$DATABASE/$BACKUP_TIMESTAMP/$HOSTNAME.sql.gz \
                  --content-disposition="attachment; filename=$DATABASE-$BACKUP_TIMESTAMP.sql.gz"
        fi
done

echo -e "\nAll database backups complete!"
